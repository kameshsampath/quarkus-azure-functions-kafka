<?xml version="1.0" encoding="UTF-8"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>dev.kameshs</groupId>
    <artifactId>quarkus-azure-functions-kafka-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>quarkus-azure-functions-example</artifactId>
  <name>Quarkus Azure Functions Kafka - Example</name>

  <properties>
    <azure.functions.maven.plugin.version>1.9.1
    </azure.functions.maven.plugin.version>
    <functionAppName>azr-greeter-funqy</functionAppName>
    <functionAppRegion>westus</functionAppRegion>
    <functionResourceGroup>java-functions-group</functionResourceGroup>
    <function>quarkus-greeter</function>
    <stagingDirectory>
      ${project.build.directory}/azure-functions/${functionAppName}
    </stagingDirectory>
    <quarkus.package.type>uber-jar</quarkus.package.type>
    <skipTests>true</skipTests>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.target>11</maven.compiler.target>
    <maven.compiler.source>11</maven.compiler.source>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus-plugin.version>1.13.2.Final</quarkus-plugin.version>
    <resources-plugin.version>3.1.0</resources-plugin.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>dev.kameshs</groupId>
      <artifactId>quarkus-azure-functions-kafka</artifactId>
      <version>1.0.0-SNAPSHOT</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager
            </java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <!-- we only use azure plugin to deploy to Azure.
           The directory structure is set up through various plugins in this pom -->
      <plugin>
        <groupId>com.microsoft.azure</groupId>
        <artifactId>azure-functions-maven-plugin</artifactId>
        <version>${azure.functions.maven.plugin.version}</version>
        <configuration>
          <resourceGroup>${functionResourceGroup}</resourceGroup>
          <appName>${functionAppName}</appName>
          <region>${functionAppRegion}</region>
          <runtime>
            <!-- runtime os, could be windows, linux or docker-->
            <os>docker</os>
            <javaVersion>11</javaVersion>
          </runtime>
          <appSettings>
            <!-- Run Azure TriggerFunction from package file by default -->
            <property>
              <name>WEBSITE_RUN_FROM_PACKAGE</name>
              <value>1</value>
            </property>
            <property>
              <name>FUNCTIONS_EXTENSION_VERSION</name>
              <value>~3</value>
            </property>
            <property>
              <name>FUNCTIONS_WORKER_RUNTIME</name>
              <value>java</value>
            </property>
          </appSettings>
        </configuration>
        <executions>
          <execution>
            <id>package-functions</id>
            <goals>
              <goal>package</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>

        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${resources-plugin.version}</version>
        <executions>
          <!-- add azure required json files
               to Azure staging directory -->
          <execution>
            <id>copy-base-azure-config</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${stagingDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/azure-config</directory>
                  <includes>
                    <include>host.json</include>
                    <include>local.settings.json</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- copy unpacked function.json into Azure staging directory -->
          <execution>
            <id>copy-function-json</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${stagingDirectory}/quarkus</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/azure-config</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>function.json</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- azure plugin wants a specific name for the jar so need to copy runner jar and rename it -->
      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <id>rename-file</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <sourceFile>
                ${project.build.directory}/${project.artifactId}-${project.version}-runner.jar
              </sourceFile>
              <destinationFile>
                ${stagingDirectory}/${project.artifactId}-${project.version}.jar
              </destinationFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
